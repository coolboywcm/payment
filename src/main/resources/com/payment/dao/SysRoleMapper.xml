<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.payment.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.payment.model.SysRole">
    <id column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="ROLE_CODE" jdbcType="VARCHAR" property="roleCode" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="RIGHTS" jdbcType="VARCHAR" property="rights" />
    <result column="PARENT_ID" jdbcType="VARCHAR" property="parentId" />
    <result column="ADD_QX" jdbcType="VARCHAR" property="addQx" />
    <result column="DEL_QX" jdbcType="VARCHAR" property="delQx" />
    <result column="EDIT_QX" jdbcType="VARCHAR" property="editQx" />
    <result column="CHA_QX" jdbcType="VARCHAR" property="chaQx" />
    <result column="QX_ID" jdbcType="VARCHAR" property="qxId" />
    <result column="STATE" jdbcType="VARCHAR" property="state" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ROLE_ID, ROLE_CODE, ROLE_NAME, RIGHTS, PARENT_ID, ADD_QX, DEL_QX, EDIT_QX, CHA_QX, 
    QX_ID, STATE, TYPE, CREATE_TIME, CREATE_USER_ID
  </sql>
  <select id="selectByExample" parameterType="com.payment.model.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.payment.model.SysRoleExample">
    delete from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.payment.model.SysRole">
    insert into sys_role (ROLE_ID, ROLE_CODE, ROLE_NAME, 
      RIGHTS, PARENT_ID, ADD_QX, 
      DEL_QX, EDIT_QX, CHA_QX, 
      QX_ID, STATE, TYPE, 
      CREATE_TIME, CREATE_USER_ID)
    values (#{roleId,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{rights,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{addQx,jdbcType=VARCHAR}, 
      #{delQx,jdbcType=VARCHAR}, #{editQx,jdbcType=VARCHAR}, #{chaQx,jdbcType=VARCHAR}, 
      #{qxId,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.payment.model.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="roleCode != null">
        ROLE_CODE,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="rights != null">
        RIGHTS,
      </if>
      <if test="parentId != null">
        PARENT_ID,
      </if>
      <if test="addQx != null">
        ADD_QX,
      </if>
      <if test="delQx != null">
        DEL_QX,
      </if>
      <if test="editQx != null">
        EDIT_QX,
      </if>
      <if test="chaQx != null">
        CHA_QX,
      </if>
      <if test="qxId != null">
        QX_ID,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="rights != null">
        #{rights,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="addQx != null">
        #{addQx,jdbcType=VARCHAR},
      </if>
      <if test="delQx != null">
        #{delQx,jdbcType=VARCHAR},
      </if>
      <if test="editQx != null">
        #{editQx,jdbcType=VARCHAR},
      </if>
      <if test="chaQx != null">
        #{chaQx,jdbcType=VARCHAR},
      </if>
      <if test="qxId != null">
        #{qxId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.payment.model.SysRoleExample" resultType="java.lang.Long">
    select count(*) from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role
    <set>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleCode != null">
        ROLE_CODE = #{record.roleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null">
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.rights != null">
        RIGHTS = #{record.rights,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.addQx != null">
        ADD_QX = #{record.addQx,jdbcType=VARCHAR},
      </if>
      <if test="record.delQx != null">
        DEL_QX = #{record.delQx,jdbcType=VARCHAR},
      </if>
      <if test="record.editQx != null">
        EDIT_QX = #{record.editQx,jdbcType=VARCHAR},
      </if>
      <if test="record.chaQx != null">
        CHA_QX = #{record.chaQx,jdbcType=VARCHAR},
      </if>
      <if test="record.qxId != null">
        QX_ID = #{record.qxId,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role
    set ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      ROLE_CODE = #{record.roleCode,jdbcType=VARCHAR},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      RIGHTS = #{record.rights,jdbcType=VARCHAR},
      PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
      ADD_QX = #{record.addQx,jdbcType=VARCHAR},
      DEL_QX = #{record.delQx,jdbcType=VARCHAR},
      EDIT_QX = #{record.editQx,jdbcType=VARCHAR},
      CHA_QX = #{record.chaQx,jdbcType=VARCHAR},
      QX_ID = #{record.qxId,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.payment.model.SysRole">
    update sys_role
    <set>
      <if test="roleCode != null">
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="rights != null">
        RIGHTS = #{rights,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="addQx != null">
        ADD_QX = #{addQx,jdbcType=VARCHAR},
      </if>
      <if test="delQx != null">
        DEL_QX = #{delQx,jdbcType=VARCHAR},
      </if>
      <if test="editQx != null">
        EDIT_QX = #{editQx,jdbcType=VARCHAR},
      </if>
      <if test="chaQx != null">
        CHA_QX = #{chaQx,jdbcType=VARCHAR},
      </if>
      <if test="qxId != null">
        QX_ID = #{qxId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.payment.model.SysRole">
    update sys_role
    set ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      RIGHTS = #{rights,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=VARCHAR},
      ADD_QX = #{addQx,jdbcType=VARCHAR},
      DEL_QX = #{delQx,jdbcType=VARCHAR},
      EDIT_QX = #{editQx,jdbcType=VARCHAR},
      CHA_QX = #{chaQx,jdbcType=VARCHAR},
      QX_ID = #{qxId,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
</mapper>