<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.payment.dao.PyBonusPoolMapper">
  <resultMap id="BaseResultMap" type="com.payment.model.PyBonusPool">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ORG_ID" jdbcType="VARCHAR" property="orgId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="TOTAL" jdbcType="DECIMAL" property="total" />
    <result column="DETAIL_DESC" jdbcType="VARCHAR" property="detailDesc" />
    <result column="STATE" jdbcType="VARCHAR" property="state" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
    <result column="USED_TOTAL" jdbcType="DECIMAL" property="usedTotal" />
    <result column="SHARE_RATIO" jdbcType="DECIMAL" property="shareRatio" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ORG_ID, NAME, TOTAL, DETAIL_DESC, STATE, CREATE_TIME, CREATE_USER_ID, USED_TOTAL, 
    SHARE_RATIO
  </sql>
  <select id="selectByExample" parameterType="com.payment.model.PyBonusPoolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from py_bonus_pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from py_bonus_pool
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from py_bonus_pool
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.payment.model.PyBonusPoolExample">
    delete from py_bonus_pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.payment.model.PyBonusPool">
    insert into py_bonus_pool (ID, ORG_ID, NAME, 
      TOTAL, DETAIL_DESC, STATE, 
      CREATE_TIME, CREATE_USER_ID, USED_TOTAL, 
      SHARE_RATIO)
    values (#{id,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{total,jdbcType=DECIMAL}, #{detailDesc,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{usedTotal,jdbcType=DECIMAL}, 
      #{shareRatio,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.payment.model.PyBonusPool">
    insert into py_bonus_pool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="orgId != null">
        ORG_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="total != null">
        TOTAL,
      </if>
      <if test="detailDesc != null">
        DETAIL_DESC,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
      <if test="usedTotal != null">
        USED_TOTAL,
      </if>
      <if test="shareRatio != null">
        SHARE_RATIO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="detailDesc != null">
        #{detailDesc,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="usedTotal != null">
        #{usedTotal,jdbcType=DECIMAL},
      </if>
      <if test="shareRatio != null">
        #{shareRatio,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.payment.model.PyBonusPoolExample" resultType="java.lang.Long">
    select count(*) from py_bonus_pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update py_bonus_pool
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        ORG_ID = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        TOTAL = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.detailDesc != null">
        DETAIL_DESC = #{record.detailDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.usedTotal != null">
        USED_TOTAL = #{record.usedTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.shareRatio != null">
        SHARE_RATIO = #{record.shareRatio,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update py_bonus_pool
    set ID = #{record.id,jdbcType=VARCHAR},
      ORG_ID = #{record.orgId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      TOTAL = #{record.total,jdbcType=DECIMAL},
      DETAIL_DESC = #{record.detailDesc,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      CREATE_USER_ID = #{record.createUserId,jdbcType=VARCHAR},
      USED_TOTAL = #{record.usedTotal,jdbcType=DECIMAL},
      SHARE_RATIO = #{record.shareRatio,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.payment.model.PyBonusPool">
    update py_bonus_pool
    <set>
      <if test="orgId != null">
        ORG_ID = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        TOTAL = #{total,jdbcType=DECIMAL},
      </if>
      <if test="detailDesc != null">
        DETAIL_DESC = #{detailDesc,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="usedTotal != null">
        USED_TOTAL = #{usedTotal,jdbcType=DECIMAL},
      </if>
      <if test="shareRatio != null">
        SHARE_RATIO = #{shareRatio,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.payment.model.PyBonusPool">
    update py_bonus_pool
    set ORG_ID = #{orgId,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      TOTAL = #{total,jdbcType=DECIMAL},
      DETAIL_DESC = #{detailDesc,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      USED_TOTAL = #{usedTotal,jdbcType=DECIMAL},
      SHARE_RATIO = #{shareRatio,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>