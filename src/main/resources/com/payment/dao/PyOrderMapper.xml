<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.payment.dao.PyOrderMapper">
  <resultMap id="BaseResultMap" type="com.payment.model.PyOrder">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="ORG_ORDER_NO" jdbcType="VARCHAR" property="orgOrderNo" />
    <result column="TRADE_NAME" jdbcType="VARCHAR" property="tradeName" />
    <result column="TRADE_CODE" jdbcType="VARCHAR" property="tradeCode" />
    <result column="SHOP_CODE" jdbcType="VARCHAR" property="shopCode" />
    <result column="POS_CODE" jdbcType="VARCHAR" property="posCode" />
    <result column="CARD_NO" jdbcType="VARCHAR" property="cardNo" />
    <result column="SN" jdbcType="VARCHAR" property="sn" />
    <result column="VERSION" jdbcType="VARCHAR" property="version" />
    <result column="SHOP_ID" jdbcType="VARCHAR" property="shopId" />
    <result column="ACTIVE_ID" jdbcType="VARCHAR" property="activeId" />
    <result column="CARD_ID" jdbcType="VARCHAR" property="cardId" />
    <result column="ORDER_AMOUNT" jdbcType="DECIMAL" property="orderAmount" />
    <result column="IS_DISCOUNT" jdbcType="VARCHAR" property="isDiscount" />
    <result column="DISCOUNT" jdbcType="DECIMAL" property="discount" />
    <result column="DISCOUNT_AMOUNT" jdbcType="DECIMAL" property="discountAmount" />
    <result column="DISCOUNT_AMOUNT_TOTAL" jdbcType="TIMESTAMP" property="discountAmountTotal" />
    <result column="REAL_AMOUNT" jdbcType="DECIMAL" property="realAmount" />
    <result column="PAY_TYPE" jdbcType="VARCHAR" property="payType" />
    <result column="PAY_TIME" jdbcType="TIMESTAMP" property="payTime" />
    <result column="STATE" jdbcType="VARCHAR" property="state" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.payment.model.PyOrder">
    <result column="REQ_INFO" jdbcType="LONGVARCHAR" property="reqInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ORDER_NO, ORG_ORDER_NO, TRADE_NAME, TRADE_CODE, SHOP_CODE, POS_CODE, CARD_NO, 
    SN, VERSION, SHOP_ID, ACTIVE_ID, CARD_ID, ORDER_AMOUNT, IS_DISCOUNT, DISCOUNT, DISCOUNT_AMOUNT, 
    DISCOUNT_AMOUNT_TOTAL, REAL_AMOUNT, PAY_TYPE, PAY_TIME, STATE, CREATE_TIME
  </sql>
  <sql id="Blob_Column_List">
    REQ_INFO
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.payment.model.PyOrderExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from py_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.payment.model.PyOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from py_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from py_order
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from py_order
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.payment.model.PyOrderExample">
    delete from py_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.payment.model.PyOrder">
    insert into py_order (ID, ORDER_NO, ORG_ORDER_NO, 
      TRADE_NAME, TRADE_CODE, SHOP_CODE, 
      POS_CODE, CARD_NO, SN, 
      VERSION, SHOP_ID, ACTIVE_ID, 
      CARD_ID, ORDER_AMOUNT, IS_DISCOUNT, 
      DISCOUNT, DISCOUNT_AMOUNT, DISCOUNT_AMOUNT_TOTAL, 
      REAL_AMOUNT, PAY_TYPE, PAY_TIME, 
      STATE, CREATE_TIME, REQ_INFO
      )
    values (#{id,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{orgOrderNo,jdbcType=VARCHAR}, 
      #{tradeName,jdbcType=VARCHAR}, #{tradeCode,jdbcType=VARCHAR}, #{shopCode,jdbcType=VARCHAR}, 
      #{posCode,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR}, #{shopId,jdbcType=VARCHAR}, #{activeId,jdbcType=VARCHAR}, 
      #{cardId,jdbcType=VARCHAR}, #{orderAmount,jdbcType=DECIMAL}, #{isDiscount,jdbcType=VARCHAR}, 
      #{discount,jdbcType=DECIMAL}, #{discountAmount,jdbcType=DECIMAL}, #{discountAmountTotal,jdbcType=TIMESTAMP}, 
      #{realAmount,jdbcType=DECIMAL}, #{payType,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{reqInfo,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.payment.model.PyOrder">
    insert into py_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="orderNo != null">
        ORDER_NO,
      </if>
      <if test="orgOrderNo != null">
        ORG_ORDER_NO,
      </if>
      <if test="tradeName != null">
        TRADE_NAME,
      </if>
      <if test="tradeCode != null">
        TRADE_CODE,
      </if>
      <if test="shopCode != null">
        SHOP_CODE,
      </if>
      <if test="posCode != null">
        POS_CODE,
      </if>
      <if test="cardNo != null">
        CARD_NO,
      </if>
      <if test="sn != null">
        SN,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="shopId != null">
        SHOP_ID,
      </if>
      <if test="activeId != null">
        ACTIVE_ID,
      </if>
      <if test="cardId != null">
        CARD_ID,
      </if>
      <if test="orderAmount != null">
        ORDER_AMOUNT,
      </if>
      <if test="isDiscount != null">
        IS_DISCOUNT,
      </if>
      <if test="discount != null">
        DISCOUNT,
      </if>
      <if test="discountAmount != null">
        DISCOUNT_AMOUNT,
      </if>
      <if test="discountAmountTotal != null">
        DISCOUNT_AMOUNT_TOTAL,
      </if>
      <if test="realAmount != null">
        REAL_AMOUNT,
      </if>
      <if test="payType != null">
        PAY_TYPE,
      </if>
      <if test="payTime != null">
        PAY_TIME,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="reqInfo != null">
        REQ_INFO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orgOrderNo != null">
        #{orgOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeName != null">
        #{tradeName,jdbcType=VARCHAR},
      </if>
      <if test="tradeCode != null">
        #{tradeCode,jdbcType=VARCHAR},
      </if>
      <if test="shopCode != null">
        #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="posCode != null">
        #{posCode,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="activeId != null">
        #{activeId,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="isDiscount != null">
        #{isDiscount,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmountTotal != null">
        #{discountAmountTotal,jdbcType=TIMESTAMP},
      </if>
      <if test="realAmount != null">
        #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="reqInfo != null">
        #{reqInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.payment.model.PyOrderExample" resultType="java.lang.Long">
    select count(*) from py_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update py_order
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orgOrderNo != null">
        ORG_ORDER_NO = #{record.orgOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeName != null">
        TRADE_NAME = #{record.tradeName,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeCode != null">
        TRADE_CODE = #{record.tradeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shopCode != null">
        SHOP_CODE = #{record.shopCode,jdbcType=VARCHAR},
      </if>
      <if test="record.posCode != null">
        POS_CODE = #{record.posCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        CARD_NO = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sn != null">
        SN = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        SHOP_ID = #{record.shopId,jdbcType=VARCHAR},
      </if>
      <if test="record.activeId != null">
        ACTIVE_ID = #{record.activeId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null">
        CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderAmount != null">
        ORDER_AMOUNT = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.isDiscount != null">
        IS_DISCOUNT = #{record.isDiscount,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null">
        DISCOUNT = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null">
        DISCOUNT_AMOUNT = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmountTotal != null">
        DISCOUNT_AMOUNT_TOTAL = #{record.discountAmountTotal,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realAmount != null">
        REAL_AMOUNT = #{record.realAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null">
        PAY_TYPE = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        PAY_TIME = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.reqInfo != null">
        REQ_INFO = #{record.reqInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update py_order
    set ID = #{record.id,jdbcType=VARCHAR},
      ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      ORG_ORDER_NO = #{record.orgOrderNo,jdbcType=VARCHAR},
      TRADE_NAME = #{record.tradeName,jdbcType=VARCHAR},
      TRADE_CODE = #{record.tradeCode,jdbcType=VARCHAR},
      SHOP_CODE = #{record.shopCode,jdbcType=VARCHAR},
      POS_CODE = #{record.posCode,jdbcType=VARCHAR},
      CARD_NO = #{record.cardNo,jdbcType=VARCHAR},
      SN = #{record.sn,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=VARCHAR},
      SHOP_ID = #{record.shopId,jdbcType=VARCHAR},
      ACTIVE_ID = #{record.activeId,jdbcType=VARCHAR},
      CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      ORDER_AMOUNT = #{record.orderAmount,jdbcType=DECIMAL},
      IS_DISCOUNT = #{record.isDiscount,jdbcType=VARCHAR},
      DISCOUNT = #{record.discount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT = #{record.discountAmount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT_TOTAL = #{record.discountAmountTotal,jdbcType=TIMESTAMP},
      REAL_AMOUNT = #{record.realAmount,jdbcType=DECIMAL},
      PAY_TYPE = #{record.payType,jdbcType=VARCHAR},
      PAY_TIME = #{record.payTime,jdbcType=TIMESTAMP},
      STATE = #{record.state,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      REQ_INFO = #{record.reqInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update py_order
    set ID = #{record.id,jdbcType=VARCHAR},
      ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      ORG_ORDER_NO = #{record.orgOrderNo,jdbcType=VARCHAR},
      TRADE_NAME = #{record.tradeName,jdbcType=VARCHAR},
      TRADE_CODE = #{record.tradeCode,jdbcType=VARCHAR},
      SHOP_CODE = #{record.shopCode,jdbcType=VARCHAR},
      POS_CODE = #{record.posCode,jdbcType=VARCHAR},
      CARD_NO = #{record.cardNo,jdbcType=VARCHAR},
      SN = #{record.sn,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=VARCHAR},
      SHOP_ID = #{record.shopId,jdbcType=VARCHAR},
      ACTIVE_ID = #{record.activeId,jdbcType=VARCHAR},
      CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      ORDER_AMOUNT = #{record.orderAmount,jdbcType=DECIMAL},
      IS_DISCOUNT = #{record.isDiscount,jdbcType=VARCHAR},
      DISCOUNT = #{record.discount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT = #{record.discountAmount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT_TOTAL = #{record.discountAmountTotal,jdbcType=TIMESTAMP},
      REAL_AMOUNT = #{record.realAmount,jdbcType=DECIMAL},
      PAY_TYPE = #{record.payType,jdbcType=VARCHAR},
      PAY_TIME = #{record.payTime,jdbcType=TIMESTAMP},
      STATE = #{record.state,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.payment.model.PyOrder">
    update py_order
    <set>
      <if test="orderNo != null">
        ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orgOrderNo != null">
        ORG_ORDER_NO = #{orgOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeName != null">
        TRADE_NAME = #{tradeName,jdbcType=VARCHAR},
      </if>
      <if test="tradeCode != null">
        TRADE_CODE = #{tradeCode,jdbcType=VARCHAR},
      </if>
      <if test="shopCode != null">
        SHOP_CODE = #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="posCode != null">
        POS_CODE = #{posCode,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        CARD_NO = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        SN = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        SHOP_ID = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="activeId != null">
        ACTIVE_ID = #{activeId,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        CARD_ID = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null">
        ORDER_AMOUNT = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="isDiscount != null">
        IS_DISCOUNT = #{isDiscount,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        DISCOUNT = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        DISCOUNT_AMOUNT = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmountTotal != null">
        DISCOUNT_AMOUNT_TOTAL = #{discountAmountTotal,jdbcType=TIMESTAMP},
      </if>
      <if test="realAmount != null">
        REAL_AMOUNT = #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        PAY_TYPE = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="reqInfo != null">
        REQ_INFO = #{reqInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.payment.model.PyOrder">
    update py_order
    set ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      ORG_ORDER_NO = #{orgOrderNo,jdbcType=VARCHAR},
      TRADE_NAME = #{tradeName,jdbcType=VARCHAR},
      TRADE_CODE = #{tradeCode,jdbcType=VARCHAR},
      SHOP_CODE = #{shopCode,jdbcType=VARCHAR},
      POS_CODE = #{posCode,jdbcType=VARCHAR},
      CARD_NO = #{cardNo,jdbcType=VARCHAR},
      SN = #{sn,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=VARCHAR},
      SHOP_ID = #{shopId,jdbcType=VARCHAR},
      ACTIVE_ID = #{activeId,jdbcType=VARCHAR},
      CARD_ID = #{cardId,jdbcType=VARCHAR},
      ORDER_AMOUNT = #{orderAmount,jdbcType=DECIMAL},
      IS_DISCOUNT = #{isDiscount,jdbcType=VARCHAR},
      DISCOUNT = #{discount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT = #{discountAmount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT_TOTAL = #{discountAmountTotal,jdbcType=TIMESTAMP},
      REAL_AMOUNT = #{realAmount,jdbcType=DECIMAL},
      PAY_TYPE = #{payType,jdbcType=VARCHAR},
      PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
      STATE = #{state,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      REQ_INFO = #{reqInfo,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.payment.model.PyOrder">
    update py_order
    set ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      ORG_ORDER_NO = #{orgOrderNo,jdbcType=VARCHAR},
      TRADE_NAME = #{tradeName,jdbcType=VARCHAR},
      TRADE_CODE = #{tradeCode,jdbcType=VARCHAR},
      SHOP_CODE = #{shopCode,jdbcType=VARCHAR},
      POS_CODE = #{posCode,jdbcType=VARCHAR},
      CARD_NO = #{cardNo,jdbcType=VARCHAR},
      SN = #{sn,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=VARCHAR},
      SHOP_ID = #{shopId,jdbcType=VARCHAR},
      ACTIVE_ID = #{activeId,jdbcType=VARCHAR},
      CARD_ID = #{cardId,jdbcType=VARCHAR},
      ORDER_AMOUNT = #{orderAmount,jdbcType=DECIMAL},
      IS_DISCOUNT = #{isDiscount,jdbcType=VARCHAR},
      DISCOUNT = #{discount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT = #{discountAmount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT_TOTAL = #{discountAmountTotal,jdbcType=TIMESTAMP},
      REAL_AMOUNT = #{realAmount,jdbcType=DECIMAL},
      PAY_TYPE = #{payType,jdbcType=VARCHAR},
      PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
      STATE = #{state,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>